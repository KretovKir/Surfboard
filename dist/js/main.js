!function(){var e=document.querySelector(".burger"),t=document.querySelector(".hidden"),n=document.querySelector(".cross");e.addEventListener("click",function(e){t.style.display="block",t.style.zIndex="1",t.style.overflow="hidden"}),n.addEventListener("click",function(e){t.style.display="none"}),t.addEventListener("click",e=>{e.preventDefault(),e.target.classList.contains("hidden__link")&&(t.style.display="none")})}(),function(){const o=e=>{var t=e.find(".menu__content"),n=t.find(".menu__content-utero"),o=(e=>{let t=524;var n=$(window).width(),e=e.closest(".menu__accord").find(".menu__item-title"),o=e.width()*e.length,a=(console.log(o),window.matchMedia("(max-width: 720px)").matches),i=window.matchMedia("(max-width: 480px)").matches;return a&&(t=n-o),t=i?n-e.width():t})(e);e.addClass("menu__item--active"),t.width(o),n.width(o)},a=e=>{var e=e.find(".menu__item"),t=e.find(".menu__content");e.removeClass("menu__item--active"),t.width(0)};$(".menu__item-title").on("click",e=>{e.preventDefault();var e=$(e.currentTarget),t=e.closest(".menu__item"),n=t.hasClass("menu__item--active"),e=e.closest(".menu__accord");n?a(e):(a(e),o(t))})}(),function(){let o;ymaps.ready(()=>{o=new ymaps.Map("map-block",{center:[69.165,35.14],zoom:14,controls:[]});for(var e=[[69.163907,35.146614],[69.167404,35.143657]],t=new ymaps.GeoObjectCollection({},{draggable:!1,iconLayout:"default#image",iconImageHref:"./img/marker.svg",iconImageSize:[30,42]}),n=0;n<e.length;n++)t.add(new ymaps.Placemark(e[n]));o.geoObjects.add(t),o.behaviors.disable("scrollZoom")})}(),$(".reviews__user").on("click",e=>{var n,e=$(e.currentTarget),t=e.attr("data-open"),t=(n=t,$(".reviews__content").filter((e,t)=>$(t).attr("data-open-with")==n));e.addClass("user-active").siblings().removeClass("user-active"),t.addClass("active").siblings().removeClass("active")}),function(){const o=$(".section"),n=$(".maincontent");o.first().addClass("active");var e=new MobileDetect(window.navigator.userAgent).mobile();let a=!1;const i=e=>{var t;!1===a&&(a=!0,t=-100*e,n.css({transform:`translateY(${t}%)`}),o.eq(e).addClass("active").siblings().removeClass("active"),$(".fixed__item").eq(e).addClass("fixed__item--active").siblings().removeClass("fixed__item--active"),setTimeout(()=>{a=!1},1300))},l=e=>{var t=o.filter(".active"),n=t.next(),t=t.prev();"next"===e&&n.length&&i(n.index()),"prev"===e&&t.length&&i(t.index())};$(window).on("wheel",e=>{e=e.originalEvent.deltaY;0<e&&l("next"),e<0&&l("prev")}),$(window).on("keydown",e=>{console.log(e.keyCode);var t=e.target.tagName.toLowerCase();if("input"!==t&&"textarea"!==t)switch(e.keyCode){case 38:l("prev");break;case 40:l("next")}}),$("[data-scroll-to]").on("click",e=>{e.preventDefault();e=$(e.currentTarget).attr("data-scroll-to"),e=$(`[data-section-id=${e}]`);console.log(e.index()),i(e.index())}),$(".wrapper").on("touchMove",e=>e.preventDefault()),e&&$("body").swipe({swipe:function(e,t){"up"===t&&l("next"),"down"===t&&l("prev")}})}(),function(){const t=$(".products__items").bxSlider({pager:!1,controls:!1});$(".products__control--left").click(e=>{e.preventDefault(),t.goToPrevSlide()}),$(".products__control--right").click(e=>{e.preventDefault(),t.goToNextSlide()})}(),function(){const o=e=>{var t=$(e).find(".team__item-drop");e.find(".team__item").removeClass("isActive"),$(t).height(0)};$(".team__item-title").on("click",e=>{var t,e=$(e.currentTarget),n=e.closest(".team__items");e.closest(".team__item").hasClass("isActive")?o(n):(o(n),n=e,n=$(n).closest(".team__item"),e=$(n).find(".team__item-drop"),t=$(n).find(".team__item-content"),t=$(t).height(),n.addClass("isActive"),$(e).height(t))})}(),function(){const r=document.getElementById("form");function d(e){if(e.checkValidity())return e.nextElementSibling.textContent="",1;e.nextElementSibling.textContent=e.validationMessage}sendBtn.addEventListener("click",e=>{if(e.preventDefault(),console.log("form1",r),function(e){let t=!0;d(e.elements.name)||(t=!1);d(e.elements.phone)||(t=!1);d(e.elements.comment)||(t=!1);d(e.elements.street)||(t=!1);d(e.elements.house)||(t=!1);d(e.elements.corpus)||(t=!1);d(e.elements.apartment)||(t=!1);d(e.elements.floor)||(t=!1);return t}(r)){console.log("ок");const r=$("#form");var e=r.find("[name = 'name']"),t=r.find("[name = 'phone']"),n=r.find("[name = 'street']"),o=r.find("[name = 'house']"),a=r.find("[name = 'corpus']"),i=r.find("[name = 'apartment']"),l=r.find("[name = 'floor']"),s=r.find("[name='to']"),c=r.find("[name='comment']");$.ajax({url:"https://webdev-api.loftschool.com/sendmail",method:"post",data:{name:e.val(),phone:t.val(),street:n.val(),house:o.val(),corpus:a.val(),apartment:i.val(),floor:l.val(),to:s.val(),comment:c.val()},success:e=>{console.log(e),$(".modal__text").text(e.message),$("#modal").css("overflow","hidden"),$.fancybox.open({src:"#modal",type:"inline"})},error:e=>{console.log(e),$(".modal__text").text("Произошла ошибка, попробуйте позже"),$.fancybox.open({src:"#modal",type:"inline"})}})}}),$(".app-close-modal").on("click",()=>{$.fancybox.close()})}(),function(){let a,i,l,s,c;document.addEventListener("DOMContentLoaded",e=>{a=document.getElementById("video"),l=document.getElementById("durationLevel"),s=document.getElementById("soundLevel"),i=document.querySelectorAll(".play"),s.addEventListener("click",o),s.addEventListener("mouseup",o),l.value=0,l.min=0,l.max=Math.round(a.duration),l.addEventListener("input",n);for(let e=0;e<i.length;e++)i[e].addEventListener("click",()=>{document.querySelector(".play-btn").classList.toggle("play-btn--active"),a.paused?(a.play(),c=setInterval(t,1e3/66)):(a.pause(),clearInterval(c))});function t(){l.value=a.currentTime}function n(){a.currentTime=l.value,c=setInterval(t,1e3/66)}function o(){a.volume=s.value/10}document.getElementById("micLevel").addEventListener("click",function(){0===a.volume?(a.volume=s).value=10*s:(s=a.volume,a.volume=0,s.value=0)})})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
